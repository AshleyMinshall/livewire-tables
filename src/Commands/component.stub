<?php

namespace [namespace];

use Coryrose\LivewireTables\LivewireModelTable;
use Livewire\WithPagination;
use App\User;
use Illuminate\Database\Eloquent\Builder;

class [class] extends LivewireModelTable
{
    use WithPagination;

    public $paginate = true;
    public $pagination = 10;
    public $hasSearch = true;

    public function fields() {
        return [
            [
                'title' => 'ID',
                'name' => 'id',
                'header_class' => '',
                'cell_class' => '',
                'sortable' => true,
                'searchable' => true,
                
                // additional options, not required
                
                // 'orderBy' => 'some_column',
                // 'orderByRaw' => function(Builder $query, $direction) {
                //    return $query->orderByRaw("some_column, some_column2 $direction")
                // }
                // 'rawSearch' => function (Builder $query) {
                //     return $query->orWhereRaw(
                //         'CONCAT("some_column", " ", some_column2) LIKE LOWER(?)',
                //         ["%{$this->search}%"]
                //     );
                // },
            ]
        ];
    }

    public function render()
    {
        return view('[view]', [
            'rowData' => $this->query(),
        ]);
    }

    public function model()
    {
        return User::class;
    }
}
